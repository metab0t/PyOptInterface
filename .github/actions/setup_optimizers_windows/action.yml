name: "Install optimizers on windows"

inputs:
  GUROBI_WLS: 
    description: "..."
    required: true
  COPT_CLIENT_INI:
    description: "..."
    required: true
  MOSEK_LICENSE:
    description: "..."
    required: true
  GITHUB_TOKEN:
    description: "..."
    required: true
  CHECK_LICENSE: 
    description: "..."
    required: true

runs:
  using: "composite"
  steps:
    - name: Install lessmsi
      shell: pwsh
      run: |
        curl -L -o D:\lessmsi.zip https://github.com/activescott/lessmsi/releases/download/v1.10.0/lessmsi-v1.10.0.zip
        7z x D:\lessmsi.zip -oD:\lessmsi
        echo "PATH=$env:PATH;D:\lessmsi" >> $env:GITHUB_ENV
    - name: Test lessmsi
      shell: pwsh
      run: |
        lessmsi h

    - name: Create directory to store installers
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Force -Path "D:\installers"

    - name: Cache Installers
      id: cache-installers-windows
      uses: actions/cache@v4
      env:
        cache-name: cache-installers-windows
      with:
        path: D:\installers
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('optimizer_version.toml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - if: ${{ steps.cache-installers-windows.outputs.cache-hit != 'true' }}
      shell: pwsh
      name: Download Installers
      run: |
        curl -L -o D:\installers\gurobi.msi https://packages.gurobi.com/12.0/Gurobi-12.0.2-win64.msi
        curl -L -o D:\installers\copt.zip https://pub.shanshu.ai/download/copt/7.2.8/win64/CardinalOptimizer-7.2.8-win64.zip
        curl -L -o D:\installers\mosek.msi https://download.mosek.com/stable/10.2.0/moseksetupwin64x86.msi
        curl -L -o D:\installers\idaes-solvers.tar.gz https://github.com/IDAES/idaes-ext/releases/download/3.4.2/idaes-solvers-windows-x86_64.tar.gz

    - name: List Installers
      shell: pwsh
      run: |
        Get-ChildItem -Path D:\installers

    - name: Setup Gurobi Installation
      shell: pwsh
      env:
        GUROBI_WLS: ${{ inputs.GUROBI_WLS }}
      run: |
        lessmsi x D:\installers\gurobi.msi "D:\" gurobi_cl.exe
        lessmsi x D:\installers\gurobi.msi "D:\" gurobi120.dll gurobi120.lib
        lessmsi x D:\installers\gurobi.msi "D:\" gurobi_c.h
        ls D:\SourceDir\gurobi1202\win64
        # set environment variables
        echo "GUROBI_HOME=D:\SourceDir\gurobi1202\win64" >> $env:GITHUB_ENV
        echo "PATH=$env:PATH;D:\SourceDir\gurobi1202\win64\bin" >> $env:GITHUB_ENV
        echo $env:GUROBI_HOME
        
        # setup license using secrets
        echo $env:GUROBI_WLS > D:\gurobi.lic
        echo "GRB_LICENSE_FILE=D:\gurobi.lic" >> $env:GITHUB_ENV
    - name: Test Gurobi
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: pwsh
      run: |
        gurobi_cl

    - name: Setup COPT Installation
      shell: pwsh
      env:
        COPT_CLIENT_INI: ${{ inputs.COPT_CLIENT_INI }}
      run: |
        # unzip with 7zip
        7z x D:\installers\copt.zip -oD:\
        ls D:\copt72
        # set environment variables
        echo "COPT_HOME=D:\copt72" >> $env:GITHUB_ENV
        echo "PATH=$env:PATH;D:\copt72\bin" >> $env:GITHUB_ENV
        echo $env:COPT_HOME

        # Just use the size-limited license
        # echo $env:COPT_CLIENT_INI > D:\client.ini
        # echo "COPT_LICENSE_DIR=D:\" >> $env:GITHUB_ENV
    - name: Test COPT
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: pwsh
      run: |
        copt_cmd -c "quit"

    - name: Setup MOSEK Installation
      shell: pwsh
      env:
        MOSEK_LICENSE: ${{ inputs.MOSEK_LICENSE }}
      run: |
        lessmsi x D:\installers\mosek.msi "D:\" msktestlic.exe
        lessmsi x D:\installers\mosek.msi "D:\" mosek64_10_2.dll mosek64_10_2.lib tbb12.dll svml_dispmd.dll
        lessmsi x D:\installers\mosek.msi "D:\" mosek.h
        ls D:\SourceDir\PFiles\Mosek\10.2\tools\platform\win64x86
        # set environment variables
        echo "MOSEK_10_2_BINDIR=D:\SourceDir\PFiles\Mosek\10.2\tools\platform\win64x86\bin" >> $env:GITHUB_ENV
        echo "PATH=$env:PATH;D:\SourceDir\PFiles\Mosek\10.2\tools\platform\win64x86\bin" >> $env:GITHUB_ENV
        echo $env:MOSEK_10_2_BINDIR

        # setup license using secrets
        echo $env:MOSEK_LICENSE > D:\mosek.lic
        echo "MOSEKLM_LICENSE_FILE=D:\mosek.lic" >> $env:GITHUB_ENV
    - name: Test MOSEK
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: pwsh
      run: |
        msktestlic

    - name: Setup IPOPT solver
      shell: pwsh
      run: |
        7z x -so D:\installers\idaes-solvers.tar.gz | 7z x -si -ttar -oD:\ipopt
        echo "PATH=D:\ipopt;$env:PATH" >> $env:GITHUB_ENV
        ls D:\ipopt
    - name: Test IPOPT
      shell: pwsh
      run: |
        ipopt -v
