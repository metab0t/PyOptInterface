name: "Install optimizers on macOS"

inputs:
  GUROBI_WLS: 
    description: "..."
    required: true
  COPT_CLIENT_INI:
    description: "..."
    required: true
  MOSEK_LICENSE:
    description: "..."
    required: true
  GITHUB_TOKEN:
    description: "..."
    required: true
  CHECK_LICENSE: 
    description: "..."
    required: true
  ARCH:
    description: "..."
    required: true
    type: choice
    default: "X64"
    options:
      - "X64"
      - "ARM64"

runs:
  using: "composite"
  steps:
    - name: Create directory to store installers
      shell: bash
      run: |
        mkdir -p ~/installers

    - name: Cache Installers
      id: cache-installers-macos
      uses: actions/cache@v4
      env:
        cache-name: cache-installers-macos
      with:
        path: ~/installers
        key: ${{ runner.os }}-${{ runner.arch }}-build-${{ env.cache-name }}-${{ hashFiles('optimizer_version.toml') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-build-${{ env.cache-name }}-

    - if: ${{ steps.cache-installers-macos.outputs.cache-hit != 'true' }}
      shell: bash
      name: Download Universal Installers
      run: |
        curl -L -o ~/installers/gurobi.pkg https://packages.gurobi.com/12.0/gurobi12.0.2_macos_universal2.pkg
        curl -L -o ~/installers/copt.tar.gz https://pub.shanshu.ai/download/copt/7.2.8/osx64/CardinalOptimizer-7.2.8-universal_mac.tar.gz

    - if: ${{ (steps.cache-installers-macos.outputs.cache-hit != 'true') && (inputs.ARCH == 'X64') }}
      shell: bash
      name: Download X64 Installers
      run: |
        curl -L -o ~/installers/mosek.tar.bz2 https://download.mosek.com/stable/10.2.0/mosektoolsosx64x86.tar.bz2
        curl -L -o ~/installers/idaes-solvers.tar.gz https://github.com/IDAES/idaes-ext/releases/download/3.4.2/idaes-solvers-darwin-x86_64.tar.gz

    - if: ${{ (steps.cache-installers-macos.outputs.cache-hit != 'true') && (inputs.ARCH == 'ARM64') }}
      shell: bash
      name: Download ARM64 Installers
      run: |
        curl -L -o ~/installers/mosek.tar.bz2 https://download.mosek.com/stable/10.2.0/mosektoolsosxaarch64.tar.bz2
        curl -L -o ~/installers/idaes-solvers.tar.gz https://github.com/IDAES/idaes-ext/releases/download/3.4.2/idaes-solvers-darwin-aarch64.tar.gz

    - name: Setup Gurobi Installation
      shell: bash
      env:
        GUROBI_WLS: ${{ inputs.GUROBI_WLS }}
      run: |
        pkgutil --expand-full ~/installers/gurobi.pkg ~/gurobi
        ls ~/gurobi
        # set environment variables
        export GUROBI_HOME="${HOME}/gurobi/gurobi12.0.2_macos_universal2.component.pkg/Payload/Library/gurobi1202/macos_universal2"
        echo "GUROBI_HOME=${GUROBI_HOME}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${GUROBI_HOME}/bin" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${GUROBI_HOME}/lib" >> $GITHUB_ENV
        echo $GUROBI_HOME
        ls $GUROBI_HOME
        
        # setup license using secrets
        echo "$GUROBI_WLS" > ~/gurobi.lic
        echo "GRB_LICENSE_FILE=${HOME}/gurobi.lic" >> $GITHUB_ENV
    - name: Test Gurobi
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: bash
      run: |
        gurobi_cl

    - name: Setup COPT Installation
      shell: bash
      env:
        COPT_CLIENT_INI: ${{ inputs.COPT_CLIENT_INI }}
      run: |
        tar xfz ~/installers/copt.tar.gz -C ~/
        ls ~/copt72
        # set environment variables
        export COPT_HOME="${HOME}/copt72"
        echo "COPT_HOME=${COPT_HOME}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${COPT_HOME}/bin" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${COPT_HOME}/lib" >> $GITHUB_ENV
        echo $COPT_HOME
        ls $COPT_HOME

        # Just use the size-limited license
        # echo "$COPT_CLIENT_INI" > ~/client.ini
        # echo "COPT_LICENSE_DIR=${HOME}" >> $GITHUB_ENV
    - name: Test COPT
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: bash
      run: |
        copt_cmd -c "quit"

    - name: Setup MOSEK X64 Installation
      if: ${{ inputs.ARCH == 'X64' }}
      shell: bash
      env:
        MOSEK_LICENSE: ${{ inputs.MOSEK_LICENSE }}
      run: |
        tar jxf ~/installers/mosek.tar.bz2 -C ~/
        ls ~/mosek/10.2/tools/platform
        # set environment variables
        export MOSEK_10_2_BINDIR="${HOME}/mosek/10.2/tools/platform/osx64x86/bin"
        echo "MOSEK_10_2_BINDIR=${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo $MOSEK_10_2_BINDIR
        ls $MOSEK_10_2_BINDIR

        # setup license using secrets
        echo "$MOSEK_LICENSE" > ~/mosek.lic
        echo "MOSEKLM_LICENSE_FILE=${HOME}/mosek.lic" >> $GITHUB_ENV
    - name: Setup MOSEK ARM64 Installation
      if: ${{ inputs.ARCH == 'ARM64' }}
      shell: bash
      env:
        MOSEK_LICENSE: ${{ inputs.MOSEK_LICENSE }}
      run: |
        tar jxf ~/installers/mosek.tar.bz2 -C ~/
        ls ~/mosek/10.2/tools/platform
        # set environment variables
        export MOSEK_10_2_BINDIR="${HOME}/mosek/10.2/tools/platform/osxaarch64/bin"
        echo "MOSEK_10_2_BINDIR=${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo "PATH=${PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${MOSEK_10_2_BINDIR}" >> $GITHUB_ENV
        echo $MOSEK_10_2_BINDIR
        ls $MOSEK_10_2_BINDIR

        # setup license using secrets
        echo "$MOSEK_LICENSE" > ~/mosek.lic
        echo "MOSEKLM_LICENSE_FILE=${HOME}/mosek.lic" >> $GITHUB_ENV
    - name: Test MOSEK
      if: ${{ inputs.CHECK_LICENSE == 'true' }}
      shell: bash
      run: |
        msktestlic

    - name: Setup IPOPT Installation
      shell: bash
      run: |
        mkdir -p ~/ipopt
        tar xfz ~/installers/idaes-solvers.tar.gz -C ~/ipopt
        echo "PATH=${PATH}:${HOME}/ipopt" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${HOME}/ipopt" >> $GITHUB_ENV
        ls ~/ipopt
    - name: Test IPOPT
      shell: bash
      run: |
        ipopt -v
